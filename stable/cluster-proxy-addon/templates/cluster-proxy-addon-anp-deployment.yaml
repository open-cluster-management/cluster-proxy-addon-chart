apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cluster-proxy-addon.fullname" . }}-anp-server
  labels:
    app: {{ template "cluster-proxy-addon.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "cluster-proxy-addon.name" . }}
    chart: {{ template "cluster-proxy-addon.chart" . }}
    component: cluster-proxy-addon-anp-server
    helm.sh/chart: {{ template "cluster-proxy-addon.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  # fixed replicas to 1, the anp-server does not support multiple replicas
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "cluster-proxy-addon.name" . }}
      release: {{ .Release.Name }}
      component: cluster-proxy-addon-anp-server
  template:
    metadata:
      labels:
        app: {{ template "cluster-proxy-addon.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ template "cluster-proxy-addon.name" . }}
        chart: {{ template "cluster-proxy-addon.chart" . }}
        component: cluster-proxy-addon-anp-server
        helm.sh/chart: {{ template "cluster-proxy-addon.chart" . }}
        heritage: {{ .Release.Service }}
        ocm-antiaffinity-selector: cluster-proxy-addon-anp-server
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "cluster-proxy-addon.fullname" . }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                {{- range .Values.arch }}
                - {{ . }}
                {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            podAffinityTerm:
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - cluster-proxy-addon-anp-server
          - weight: 35
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - cluster-proxy-addon-anp-server
      tolerations:
        - key: dedicated
          operator: Exists
          effect: NoSchedule
        - effect: NoSchedule 
          key: node-role.kubernetes.io/infra 
          operator: Exists
      containers:
      - name: anp-server
        image: {{ .Values.global.imageOverrides.cluster_proxy_addon }}
        imagePullPolicy: {{ .Values.global.pullPolicy }}
        args:
          - "/proxy-server"
          - "--mode=http-connect"
          - "--agent-port=9091"
          - "--server-port=0"
          - "--keepalive-time=30s"
          - "--cluster-ca-cert=/ca/ca-bundle.crt"
          - "--cluster-cert=/tls/tls.crt"
          - "--cluster-key=/tls/tls.key"
          - "--proxy-strategies=destHost"
          - "--uds-name=/tmp/cluster-proxy-addon/socket"
          - "--delete-existing-uds-file=true"
        env:
        {{- if .Values.hubconfig.proxyConfigs }}
          - name: HTTP_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.HTTP_PROXY }}
          - name: HTTPS_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.HTTPS_PROXY }}
          - name: NO_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.NO_PROXY }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
        livenessProbe:
          httpGet:
            scheme: HTTP
            port: 8180
            path: "/proxy-server-config-checker"
          initialDelaySeconds: 60
          timeoutSeconds: 60
          failureThreshold: 1
        volumeMounts:
          - name: anp-tls-vol
            mountPath: /tls
            readOnly: true
          - name: ca-vol
            mountPath: /ca
            readOnly: true
          - name: uds-socket 
            mountPath: /tmp/cluster-proxy-addon
        ports:
          - name: agentport
            containerPort: 9091
      - name: proxy-server-config-checker
        image: {{ .Values.global.imageOverrides.cluster_proxy_addon }}
        imagePullPolicy: {{ .Values.global.pullPolicy }} 
        args:
          - "/cluster-proxy"
          - "config-checker"
          - "--name=proxy-server-config-checker"
          - "--port=8180"
          - "--files=/ca/ca-bundle.crt"
          - "--files=/tls/tls.crt"
          - "--files=/tls/tls.key"
        volumeMounts:
          - name: anp-tls-vol
            mountPath: /tls
            readOnly: true
          - name: ca-vol
            mountPath: /ca
            readOnly: true
      - name: user-proxy
        image: {{ .Values.global.imageOverrides.cluster_proxy_addon }}
        imagePullPolicy: {{ .Values.global.pullPolicy }}
        args:
          - "/cluster-proxy"
          - "user-server"
          - "--server-port=9092"
          - "--server-key=/tls/tls.key"
          - "--server-cert=/tls/tls.crt"
          - "--proxy-uds=/tmp/cluster-proxy-addon/socket"
        env:
        {{- if .Values.hubconfig.proxyConfigs }}
          - name: HTTP_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.HTTP_PROXY }}
          - name: HTTPS_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.HTTPS_PROXY }}
          - name: NO_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.NO_PROXY }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
        livenessProbe:
          httpGet:
            scheme: HTTP
            port: 8181
            path: "/user-server-config-checker"
          initialDelaySeconds: 60
          timeoutSeconds: 60
          failureThreshold: 1
        volumeMounts:
          - name: user-tls-vol
            mountPath: /tls
            readOnly: true
          - name: uds-socket 
            mountPath: /tmp/cluster-proxy-addon
        ports:
          - name: userport
            containerPort: 9092
      - name: user-server-config-checker
        image: {{ .Values.global.imageOverrides.cluster_proxy_addon }}
        imagePullPolicy: {{ .Values.global.pullPolicy }} 
        args:
          - "/cluster-proxy"
          - "config-checker"
          - "--name=user-server-config-checker"
          - "--port=8181"
          - "--files=/tls/tls.crt"
          - "--files=/tls/tls.key"
        volumeMounts:
          - name: user-tls-vol
            mountPath: /tls
            readOnly: true
      volumes:
        - name: uds-socket
          emptyDir: {}
        - name: user-tls-vol
          secret:
            secretName: cluster-proxy-user-proxy-serving-cert
        - name: anp-tls-vol
          secret:
            secretName: cluster-proxy-addon-serving-cert
        - name: ca-vol
          configMap:
            name: cluster-proxy-ca-bundle
        {{- if .Values.hubconfig.proxyConfigs }}
          - name: HTTP_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.HTTP_PROXY }}
          - name: HTTPS_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.HTTPS_PROXY }}
          - name: NO_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.NO_PROXY }}
        {{- end }}
      {{- if .Values.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.pullSecret }}
      {{- end }}
      {{- with .Values.hubconfig.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
